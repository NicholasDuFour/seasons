{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACNC,KAAM,4CACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,qCACNC,SAAU,eAyBDE,EAbO,SAACC,GACnB,IATeC,EAAIC,EASbC,GATSF,EASUD,EAAMC,KATZC,GASiB,IAAIE,MAAOC,YARrC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIAK,EAEDZ,EAAaS,GAAhCP,EAFoBU,EAEpBV,KAAMC,EAFcS,EAEdT,SAEd,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC5BlBe,EAAU,SAACZ,GACf,OACAO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZV,EAAMa,WAObD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCZTG,6MACEC,MAAQ,CAAEf,IAAK,KAAMgB,aAAc,uFAEpB,IAAAC,EAAAC,KACfC,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GAAD,OAAeN,EAAKO,SAAS,CAAExB,IAAKuB,EAASE,OAAOC,YACpD,SAACC,GAAD,OAAUV,EAAKO,SAAS,CAAER,aAAcW,EAAIf,oDAIhD,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAAA,qBAAcU,KAAKH,MAAMC,eAG/BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAOkB,KAAKH,MAAMf,MAGrCM,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACqB,EAAD,CAASjB,QAAQ,qEAO7B,OACIN,EAAAC,EAAAC,cAAA,WACKU,KAAKY,wBA3BJC,IAAMC,WAmCxBC,IAASC,OAAQ5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.0aa85fe4.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n    summer: {\n      text: \"Looks like summer.  Let's hit that beach!\",\n      iconName: \"sun\"\n    },\n    winter: {\n      text: \"Burr, it's chilly! Must be winter.\",\n      iconName: \"snowflake\"\n    }\n};\n\nconst getSeason = (lat,month) =>{\n  if (month > 2 && month < 9){\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n}\n\nconst SeasonDisplay = (props) =>{\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, iconName } = seasonConfig[season];\n    \n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`}></i>\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`}></i>\n        </div>\n    );\n}\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props) =>{\n  return (\n  <div className=\"ui active dimmer\">\n    <div className=\"ui big text loader\">\n      {props.message}\n    </div>\n  </div>\n  );\n\n};\n\nSpinner.defaultProps = {\n    message: 'Loading...'\n}\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n        state = { lat: null, errorMessage: '' };\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(\n            (position) =>  this.setState({ lat: position.coords.latitude }), \n            (err) =>  this.setState({ errorMessage: err.message })\n        );\n    }\n    renderContent() {\n        if (this.state.errorMessage && !this.state.lat){\n            return <div>Error: { this.state.errorMessage }</div>\n        }\n\n        if (!this.state.errorMessage && this.state.lat){\n            return <SeasonDisplay lat= { this.state.lat }/>\n        }\n\n        return <div><Spinner message=\"Please accept location request\"/></div>\n    }\n\n\n    \n    \n    render(){\n        return (\n            <div>\n                {this.renderContent()}\n            </div>\n        );\n    }\n\n}\n\n\nReactDOM.render( <App />, document.querySelector(\"#root\"));"],"sourceRoot":""}